import React, { useState } from 'react';
import { useEditor, createShapeId } from 'tldraw';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ richText —Ñ–æ—Ä–º–∞—Ç
function toRichText(text) {
    const lines = text.split('\n');
    const content = lines.map((line) => {
        if (!line) {
            return { type: 'paragraph' };
        }
        return {
            type: 'paragraph',
            content: [{ type: 'text', text: line }],
        };
    });
    return { type: 'doc', content };
}

export function CustomControls() {
    const editor = useEditor();
    const [selectedNotes, setSelectedNotes] = useState(new Set());
    const [isSelectMode, setIsSelectMode] = useState(false);
    const [currentZoom, setCurrentZoom] = useState(100);

    const handleSelectMode = () => {
        setIsSelectMode(!isSelectMode);
        if (isSelectMode) {
            editor.setCurrentTool('select');
        }
    };

    const handleGroupSelected = () => {
        const selected = editor.getSelectedShapeIds();
        if (selected.length < 2) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏–º—É–º 2 –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è');
            return;
        }
        // –õ–æ–≥–∏–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –∑–∞–º–µ—Ç–æ–∫
        console.log('–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫:', selected);
    };

    const handleSendToObsidian = () => {
        const selected = editor.getSelectedShapeIds();
        if (selected.length === 0) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏');
            return;
        }
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Obsidian:', selected);
    };

    const handleZoomIn = () => {
        const camera = editor.getCamera();
        editor.setCamera({
            x: camera.x,
            y: camera.y,
            z: Math.min(camera.z * 1.2, 3),
        });
        setCurrentZoom(Math.round(editor.getCamera().z * 100));
    };

    const handleZoomOut = () => {
        const camera = editor.getCamera();
        editor.setCamera({
            x: camera.x,
            y: camera.y,
            z: Math.max(camera.z / 1.2, 0.3),
        });
        setCurrentZoom(Math.round(editor.getCamera().z * 100));
    };

    const handleResetZoom = () => {
        editor.resetZoom();
        setCurrentZoom(100);
    };

    const handleToggleView = () => {
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∏–¥–∞–º–∏
        console.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∞');
    };

    const handleAddNote = () => {
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏
        const id = createShapeId();
        editor.createShape({
            id,
            type: 'note',
            x: 100 + Math.random() * 500,
            y: 100 + Math.random() * 300,
            props: {
                richText: toRichText('–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞\n–ù–∞–∂–º–∏—Ç–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...'),
                noteType: 'text',
                time: new Date().toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' }),
                color: 'black',
                size: 'm',
            }
        });
    };

    return (
        <>
            {/* –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
            <div style={{
                position: 'fixed',
                top: '20px',
                left: '50%',
                transform: 'translateX(-50%)',
                background: 'rgba(26, 26, 26, 0.95)',
                backdropFilter: 'blur(10px)',
                border: '1px solid #333',
                borderRadius: '12px',
                padding: '10px 20px',
                display: 'flex',
                gap: '15px',
                alignItems: 'center',
                zIndex: 1000,
            }}>
                <button 
                    onClick={handleSelectMode}
                    style={{
                        padding: '8px 16px',
                        background: isSelectMode ? '#2a4' : '#222',
                        border: '1px solid #444',
                        color: isSelectMode ? 'white' : '#888',
                        borderRadius: '8px',
                        cursor: 'pointer',
                        fontSize: '13px',
                        transition: 'all 0.2s',
                    }}
                >
                    ‚òëÔ∏è –í—ã–±—Ä–∞—Ç—å
                </button>
                
                <button 
                    onClick={handleGroupSelected}
                    style={{
                        padding: '8px 16px',
                        background: '#222',
                        border: '1px solid #444',
                        color: '#888',
                        borderRadius: '8px',
                        cursor: 'pointer',
                        fontSize: '13px',
                        transition: 'all 0.2s',
                    }}
                >
                    üìö –û–±—ä–µ–¥–∏–Ω–∏—Ç—å
                </button>
                
                <button 
                    onClick={handleSendToObsidian}
                    style={{
                        padding: '8px 16px',
                        background: '#222',
                        border: '1px solid #444',
                        color: '#888',
                        borderRadius: '8px',
                        cursor: 'pointer',
                        fontSize: '13px',
                        transition: 'all 0.2s',
                    }}
                >
                    üì§ –í Obsidian
                </button>
                
                <div style={{ borderLeft: '1px solid #333', height: '20px' }} />
                
                <button 
                    onClick={handleZoomIn}
                    style={{
                        padding: '8px 16px',
                        background: '#222',
                        border: '1px solid #444',
                        color: '#888',
                        borderRadius: '8px',
                        cursor: 'pointer',
                        fontSize: '13px',
                        transition: 'all 0.2s',
                    }}
                >
                    üîç+
                </button>
                
                <button 
                    onClick={handleZoomOut}
                    style={{
                        padding: '8px 16px',
                        background: '#222',
                        border: '1px solid #444',
                        color: '#888',
                        borderRadius: '8px',
                        cursor: 'pointer',
                        fontSize: '13px',
                        transition: 'all 0.2s',
                    }}
                >
                    üîç-
                </button>
                
                <button 
                    onClick={handleResetZoom}
                    style={{
                        padding: '8px 16px',
                        background: '#222',
                        border: '1px solid #444',
                        color: '#888',
                        borderRadius: '8px',
                        cursor: 'pointer',
                        fontSize: '13px',
                        transition: 'all 0.2s',
                    }}
                >
                    üîÑ 100%
                </button>
                
                <div style={{ borderLeft: '1px solid #333', height: '20px' }} />
                
                <button 
                    onClick={handleToggleView}
                    style={{
                        padding: '8px 16px',
                        background: '#222',
                        border: '1px solid #444',
                        color: '#888',
                        borderRadius: '8px',
                        cursor: 'pointer',
                        fontSize: '13px',
                        transition: 'all 0.2s',
                    }}
                >
                    üìä –í–∏–¥
                </button>
                
                <button 
                    onClick={handleAddNote}
                    style={{
                        padding: '8px 16px',
                        background: '#222',
                        border: '1px solid #444',
                        color: '#888',
                        borderRadius: '8px',
                        cursor: 'pointer',
                        fontSize: '13px',
                        transition: 'all 0.2s',
                    }}
                >
                    ‚ûï –î–æ–±–∞–≤–∏—Ç—å
                </button>
            </div>

            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –º–∞—Å—à—Ç–∞–±–∞ */}
            <div style={{
                position: 'fixed',
                bottom: '20px',
                right: '20px',
                background: 'rgba(26, 26, 26, 0.95)',
                backdropFilter: 'blur(10px)',
                border: '1px solid #333',
                borderRadius: '12px',
                padding: '8px 15px',
                fontSize: '12px',
                color: '#888',
                zIndex: 1000,
            }}>
                {currentZoom}%
            </div>

            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div style={{
                position: 'fixed',
                bottom: '20px',
                left: '20px',
                background: 'rgba(26, 26, 26, 0.95)',
                backdropFilter: 'blur(10px)',
                border: '1px solid #333',
                borderRadius: '12px',
                padding: '15px',
                fontSize: '12px',
                color: '#888',
                zIndex: 1000,
            }}>
                <div style={{ marginBottom: '5px' }}>
                    <strong style={{ color: '#fff' }}>17</strong> –∑–∞–º–µ—Ç–æ–∫
                </div>
                <div style={{ marginBottom: '5px' }}>
                    <strong style={{ color: '#fff' }}>12</strong> –æ–∂–∏–¥–∞—é—Ç
                </div>
                <div style={{ marginBottom: '5px' }}>
                    <strong style={{ color: '#fff' }}>5</strong> –≤ Obsidian
                </div>
                <div style={{
                    marginTop: '10px',
                    paddingTop: '10px',
                    borderTop: '1px solid #333',
                }}>
                    <div><strong style={{ color: '#fff' }}>7 –∞–≤–≥:</strong> 7 –∑–∞–º–µ—Ç–æ–∫</div>
                    <div><strong style={{ color: '#fff' }}>8 –∞–≤–≥:</strong> 4 –∑–∞–º–µ—Ç–∫–∏</div>
                    <div><strong style={{ color: '#2a4' }}>9 –∞–≤–≥:</strong> 6 –∑–∞–º–µ—Ç–æ–∫</div>
                </div>
            </div>
        </>
    );
}

export default CustomControls;