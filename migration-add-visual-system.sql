-- Migration to add visual system fields to existing Note table
-- Run this after backing up your database

-- Add new columns to Note table
ALTER TABLE "Note" ADD COLUMN IF NOT EXISTS "location" TEXT DEFAULT 'unknown';
ALTER TABLE "Note" ADD COLUMN IF NOT EXISTS "state" TEXT DEFAULT 'analytical';
ALTER TABLE "Note" ADD COLUMN IF NOT EXISTS "importance" TEXT DEFAULT 'medium';
ALTER TABLE "Note" ADD COLUMN IF NOT EXISTS "sources" TEXT[] DEFAULT ARRAY[]::TEXT[];
ALTER TABLE "Note" ADD COLUMN IF NOT EXISTS "contentType" TEXT DEFAULT 'random';
ALTER TABLE "Note" ADD COLUMN IF NOT EXISTS "connectedTo" TEXT[] DEFAULT ARRAY[]::TEXT[];
ALTER TABLE "Note" ADD COLUMN IF NOT EXISTS "connectionType" TEXT;

-- Add indexes for better performance
CREATE INDEX IF NOT EXISTS "Note_location_idx" ON "Note"("location");
CREATE INDEX IF NOT EXISTS "Note_state_idx" ON "Note"("state");
CREATE INDEX IF NOT EXISTS "Note_importance_idx" ON "Note"("importance");
CREATE INDEX IF NOT EXISTS "Note_contentType_idx" ON "Note"("contentType");
CREATE INDEX IF NOT EXISTS "Note_connectedTo_idx" ON "Note" USING GIN("connectedTo");

-- Create NoteConnection table
CREATE TABLE IF NOT EXISTS "NoteConnection" (
    "id" TEXT NOT NULL,
    "fromNoteId" TEXT NOT NULL,
    "toNoteId" TEXT NOT NULL,
    "connectionType" TEXT NOT NULL,
    "strength" DOUBLE PRECISION NOT NULL DEFAULT 1.0,
    "description" TEXT,
    "color" TEXT,
    "style" TEXT,
    "isAutoDetected" BOOLEAN NOT NULL DEFAULT false,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT "NoteConnection_pkey" PRIMARY KEY ("id")
);

-- Create unique constraint and indexes for NoteConnection
CREATE UNIQUE INDEX IF NOT EXISTS "NoteConnection_fromNoteId_toNoteId_connectionType_key" 
ON "NoteConnection"("fromNoteId", "toNoteId", "connectionType");

CREATE INDEX IF NOT EXISTS "NoteConnection_fromNoteId_idx" ON "NoteConnection"("fromNoteId");
CREATE INDEX IF NOT EXISTS "NoteConnection_toNoteId_idx" ON "NoteConnection"("toNoteId");
CREATE INDEX IF NOT EXISTS "NoteConnection_connectionType_idx" ON "NoteConnection"("connectionType");

-- Create VisualCluster table
CREATE TABLE IF NOT EXISTS "VisualCluster" (
    "id" TEXT NOT NULL,
    "name" TEXT NOT NULL,
    "description" TEXT,
    "color" TEXT NOT NULL,
    "centerX" DOUBLE PRECISION NOT NULL,
    "centerY" DOUBLE PRECISION NOT NULL,
    "radius" DOUBLE PRECISION NOT NULL DEFAULT 200.0,
    "noteIds" TEXT[],
    "clusterType" TEXT NOT NULL,
    "isAutoGenerated" BOOLEAN NOT NULL DEFAULT false,
    "userId" TEXT NOT NULL DEFAULT 'local',
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT "VisualCluster_pkey" PRIMARY KEY ("id")
);

-- Create indexes for VisualCluster
CREATE INDEX IF NOT EXISTS "VisualCluster_userId_idx" ON "VisualCluster"("userId");
CREATE INDEX IF NOT EXISTS "VisualCluster_clusterType_idx" ON "VisualCluster"("clusterType");
CREATE INDEX IF NOT EXISTS "VisualCluster_isActive_idx" ON "VisualCluster"("isActive");

-- Create VisualPreferences table
CREATE TABLE IF NOT EXISTS "VisualPreferences" (
    "id" TEXT NOT NULL,
    "userId" TEXT NOT NULL DEFAULT 'local',
    "locationColors" JSONB,
    "stateColors" JSONB,
    "typeColors" JSONB,
    "defaultImportance" TEXT NOT NULL DEFAULT 'medium',
    "defaultLocation" TEXT NOT NULL DEFAULT 'unknown',
    "defaultState" TEXT NOT NULL DEFAULT 'analytical',
    "enableAnimations" BOOLEAN NOT NULL DEFAULT true,
    "showConnections" BOOLEAN NOT NULL DEFAULT true,
    "clusteringEnabled" BOOLEAN NOT NULL DEFAULT true,
    "autoDetectLocation" BOOLEAN NOT NULL DEFAULT false,
    "autoDetectState" BOOLEAN NOT NULL DEFAULT false,
    "autoSuggestConnections" BOOLEAN NOT NULL DEFAULT true,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT "VisualPreferences_pkey" PRIMARY KEY ("id")
);

-- Create unique constraint for VisualPreferences
CREATE UNIQUE INDEX IF NOT EXISTS "VisualPreferences_userId_key" ON "VisualPreferences"("userId");

-- Insert default visual preferences for the local user
INSERT INTO "VisualPreferences" ("id", "userId") 
VALUES (gen_random_uuid()::text, 'local')
ON CONFLICT ("userId") DO NOTHING;

-- Update existing notes with sample metadata (optional - remove if you want to set manually)
-- This gives your existing notes some visual variety for testing

UPDATE "Note" SET 
    "location" = CASE 
        WHEN random() < 0.2 THEN 'home'
        WHEN random() < 0.4 THEN 'office'
        WHEN random() < 0.6 THEN 'cafe'
        WHEN random() < 0.8 THEN 'outdoor'
        ELSE 'unknown'
    END,
    "state" = CASE 
        WHEN random() < 0.2 THEN 'work'
        WHEN random() < 0.4 THEN 'creative'
        WHEN random() < 0.6 THEN 'philosopher'
        WHEN random() < 0.8 THEN 'analytical'
        ELSE 'tilt'
    END,
    "importance" = CASE 
        WHEN random() < 0.1 THEN 'critical'
        WHEN random() < 0.3 THEN 'high'
        WHEN random() < 0.7 THEN 'medium'
        WHEN random() < 0.9 THEN 'low'
        ELSE 'reference'
    END,
    "contentType" = CASE 
        WHEN "type" = 'voice' THEN 'daily'
        WHEN "type" = 'text' THEN 'insight'
        WHEN "type" = 'collection' THEN 'report'
        ELSE 'random'
    END,
    "sources" = CASE 
        WHEN random() < 0.3 THEN ARRAY['self']
        WHEN random() < 0.5 THEN ARRAY['conversation']
        WHEN random() < 0.7 THEN ARRAY['book']
        WHEN random() < 0.8 THEN ARRAY['youtube']
        WHEN random() < 0.9 THEN ARRAY['podcast']
        ELSE ARRAY['tiktok']
    END
WHERE "location" IS NULL OR "location" = '';

COMMIT;