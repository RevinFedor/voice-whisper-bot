import { Telegraf } from 'telegraf';
import { writeFile } from 'fs/promises';
import { createReadStream } from 'fs';
import fetch from 'node-fetch';
import { OpenAI } from 'openai';
import { v4 as uuid } from 'uuid';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ .env
dotenv.config();

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const OPENAI_KEY = process.env.OPENAI_KEY;
const TIME_DELAY = 300_000;

const bot = new Telegraf(TELEGRAM_TOKEN);
const openai = new OpenAI({
    apiKey: OPENAI_KEY,
    timeout: TIME_DELAY, // 5 –º–∏–Ω—É—Ç
});

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: userId -> boolean (true = —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, false = –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
const userPreferences = new Map();

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–≤—è–∑–æ–∫: messageId –±–æ—Ç–∞ -> { voiceMessageId, fileId }
const botMessageToVoice = new Map();

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Ä–µ–∂–∏–º–∞
const MODES = {
    WITH_FORMAT: {
        emoji: 'üé®',
        name: '–° —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º',
        description: '—É–ª—É—á—à–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫',
    },
    WITHOUT_FORMAT: {
        emoji: 'üìù',
        name: '–ë–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
        description: '—Ç–æ–ª—å–∫–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞',
    },
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserMode(userId) {
    const withFormatting = userPreferences.get(userId) !== false; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    return withFormatting ? MODES.WITH_FORMAT : MODES.WITHOUT_FORMAT;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ª–æ–≤
async function improveReadability(text) {
    try {
        const response = await openai.chat.completions.create({
            model: 'gpt-3.5-turbo',
            messages: [
                {
                    role: 'system',
                    content:
                        '–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–¥–µ–ª–∞—Ç—å —Ç–µ–∫—Å—Ç –±–æ–ª–µ–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏ —É–¥–æ–±–Ω—ã–º –¥–ª—è —á—Ç–µ–Ω–∏—è, –ù–û —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∞–≤–∏–ª:\n' +
                        '1. –°–æ—Ö—Ä–∞–Ω–∏ –Ω–µ –º–µ–Ω–µ–µ 90% –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π\n' +
                        '2. –ù–ï –º–µ–Ω—è–π —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ —Ñ—Ä–∞–∑ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π\n' +
                        '3. –ù–ï —Å–æ–∫—Ä–∞—â–∞–π —Ç–µ–∫—Å—Ç –∏ –Ω–µ —É–±–∏—Ä–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n' +
                        '4. –ù–ï –¥–æ–±–∞–≤–ª—è–π –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n' +
                        '5. –ú–æ–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –ø—É–Ω–∫—Ç—É–∞—Ü–∏—é, –¥–æ–±–∞–≤–ª—è—Ç—å –∞–±–∑–∞—Ü—ã –∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –æ—á–µ–≤–∏–¥–Ω—ã–µ –æ—à–∏–±–∫–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏\n' +
                        '6. –ú–æ–∂–Ω–æ —É–±–∏—Ä–∞—Ç—å —Å–ª–æ–≤–∞-–ø–∞—Ä–∞–∑–∏—Ç—ã –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è\n' +
                        '–¢–≤–æ—è —Ü–µ–ª—å - —É–ª—É—á—à–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∏ —ç—Ç–æ–º –≤—Å–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏.',
                },
                {
                    role: 'user',
                    content: `–£–ª—É—á—à–∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å —ç—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: ${text}`,
                },
            ],
        });

        return response.choices[0].message.content.trim();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏:', error);
        return text; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∫ —Ç–µ–∫—Å—Ç—É —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏
async function createTitle(text) {
    try {
        const response = await openai.chat.completions.create({
            model: 'gpt-3.5-turbo',
            messages: [
                {
                    role: 'system',
                    content:
                        '–¢—ã —Å–æ–∑–¥–∞–µ—à—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ª–∏—á–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫ –∏ –º—ã—Å–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –¢–≤–æ—è –∑–∞–¥–∞—á–∞:\n\n' +
                        '1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–¥–µ–π/—Ç–µ–º –≤ —Ç–µ–∫—Å—Ç–µ:\n' +
                        '   - –ï—Å–ª–∏ 1 —Ç–µ–º–∞ ‚Üí –∫–æ—Ä–æ—Ç–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ (3-5 —Å–ª–æ–≤)\n' +
                        '   - –ï—Å–ª–∏ 2-3 —Ç–µ–º—ã ‚Üí —Å—Ä–µ–¥–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ (6-10 —Å–ª–æ–≤)\n' +
                        '   - –ï—Å–ª–∏ –º–Ω–æ–≥–æ —Ç–µ–º ‚Üí –¥–ª–∏–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ (10-15 —Å–ª–æ–≤)\n\n' +
                        '2. –í–∫–ª—é—á–∞–π –∫–ª—é—á–µ–≤—ã–µ —Ü–∏—Ç–∞—Ç—ã –∏–ª–∏ —Ç–µ—Ä–º–∏–Ω—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞ –≤ –∫–∞–≤—ã—á–∫–∞—Ö\n' +
                        '3. –î–µ–ª–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–Ω—è—Ç–Ω—ã–º —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä—É –∑–∞–º–µ—Ç–∫–∏\n' +
                        '4. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–ª–æ–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –Ω–µ –æ–±—â–∏–µ —Ñ—Ä–∞–∑—ã\n' +
                        '5. –°–æ–∑–¥–∞–≤–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞–∫ "—Ç—ç–≥" –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–º–µ—Ç–∫–∏ –≤ –±—É–¥—É—â–µ–º\n\n' +
                        '–ü—Ä–∏–º–µ—Ä—ã:\n' +
                        '- –û–¥–Ω–∞ —Ç–µ–º–∞: "–ò–¥–µ—è –ø—Ä–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é"\n' +
                        '- –ù–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–º: "–ü–ª–∞–Ω—ã –Ω–∞ –ø—Ä–æ–µ–∫—Ç, –≤—Å—Ç—Ä–µ—á–∞ —Å –ò–≤–∞–Ω–æ–º, –±—é–¥–∂–µ—Ç"\n' +
                        '- –ú–Ω–æ–≥–æ –¥–µ—Ç–∞–ª–µ–π: "–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: –∏—Ö —Ü–µ–Ω—ã, –Ω–∞—à USP, —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è"',
                },
                {
                    role: 'user',
                    content: `–°–æ–∑–¥–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —ç—Ç–æ–π –ª–∏—á–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏: ${text}`,
                },
            ],
        });

        return response.choices[0].message.content.trim().replace(/"/g, ''); // –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞:', error);
        return '–ó–∞–º–µ—Ç–∫–∞';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function processVoice(ctx, fileId, voiceMessageId, withFormatting) {
    const mode = withFormatting ? MODES.WITH_FORMAT : MODES.WITHOUT_FORMAT;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ
    const loadingMessage = await ctx.reply(`${mode.emoji} ‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤ —Ä–µ–∂–∏–º–µ "${mode.name}"...`, {
        reply_to_message_id: voiceMessageId,
    });

    try {
        const link = await ctx.telegram.getFileLink(fileId);
        const res = await fetch(link.href);
        const buffer = await res.arrayBuffer();
        const tmpPath = `/tmp/${uuid()}.ogg`;
        await writeFile(tmpPath, Buffer.from(buffer));

        const rawTranscript = await openai.audio.transcriptions.create({
            model: 'whisper-1',
            file: createReadStream(tmpPath),
            response_format: 'text',
            language: 'ru',
        });

        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        await ctx.telegram.deleteMessage(ctx.chat.id, loadingMessage.message_id);

        let botReply;

        if (withFormatting) {
            const improvedTranscript = await improveReadability(rawTranscript);
            const title = await createTitle(improvedTranscript);

            botReply = await ctx.reply(
                `${mode.emoji} *–†–µ–∂–∏–º: ${mode.name}*\n\n` +
                    `**–ó–∞–≥–æ–ª–æ–≤–æ–∫:**\n\`${title}\`\n\n` +
                    `**–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:**\n\`\`\`\n${improvedTranscript}\n\`\`\``,
                {
                    parse_mode: 'Markdown',
                    reply_to_message_id: voiceMessageId,
                }
            );
        } else {
            botReply = await ctx.reply(`${mode.emoji} *–†–µ–∂–∏–º: ${mode.name}*\n\n` + `**–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:**\n\`\`\`\n${rawTranscript}\n\`\`\``, {
                parse_mode: 'Markdown',
                reply_to_message_id: voiceMessageId,
            });
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑–∫—É —Å fileId
        botMessageToVoice.set(botReply.message_id, { voiceMessageId, fileId });

        return botReply;
    } catch (error) {
        await ctx.telegram.deleteMessage(ctx.chat.id, loadingMessage.message_id);
        throw error;
    }
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.command('start', (ctx) => {
    const mode = getUserMode(ctx.from.id);
    ctx.reply(
        `ü§ñ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π!*\n\n` +
            `${mode.emoji} –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: *${mode.name}*\n\n` +
            `üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n` +
            `/format - —Ä–µ–∂–∏–º —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º ${MODES.WITH_FORMAT.emoji}\n` +
            `/noformat - —Ä–µ–∂–∏–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ${MODES.WITHOUT_FORMAT.emoji}\n` +
            `/toggle - –±—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞\n` +
            `/mode - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º\n` +
            `/help - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞\n\n` +
            `–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏! üéôÔ∏è`,
        { parse_mode: 'Markdown' }
    );
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
bot.command('format', async (ctx) => {
    const userId = ctx.from.id;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–æ–π
    if (ctx.message.reply_to_message && ctx.message.reply_to_message.from?.is_bot) {
        const botMessage = ctx.message.reply_to_message;
        const voiceData = botMessageToVoice.get(botMessage.message_id);

        if (voiceData) {
            try {
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ä–µ–∂–∏–º
                userPreferences.set(userId, true);

                // –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
                await ctx.telegram.deleteMessage(ctx.chat.id, ctx.message.message_id);
                await ctx.telegram.deleteMessage(ctx.chat.id, botMessage.message_id);

                // –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∫—É –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
                botMessageToVoice.delete(botMessage.message_id);

                // –ü–µ—Ä–µ–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
                await processVoice(ctx, voiceData.fileId, voiceData.voiceMessageId, true);

                return;
            } catch (error) {
                console.error('Error processing format command:', error);
                await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.');
                return;
            }
        }
    }

    // –û–±—ã—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    userPreferences.set(userId, true);
    ctx.reply(
        `${MODES.WITH_FORMAT.emoji} *–†–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω: ${MODES.WITH_FORMAT.name}*\n\n–í–∞—à–∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è —Å —É–ª—É—á—à–µ–Ω–∏–µ–º —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º.`,
        {
            parse_mode: 'Markdown',
        }
    );
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
bot.command('noformat', async (ctx) => {
    const userId = ctx.from.id;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–æ–π
    if (ctx.message.reply_to_message && ctx.message.reply_to_message.from?.is_bot) {
        const botMessage = ctx.message.reply_to_message;
        const voiceData = botMessageToVoice.get(botMessage.message_id);

        if (voiceData) {
            try {
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ä–µ–∂–∏–º
                userPreferences.set(userId, false);

                // –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
                await ctx.telegram.deleteMessage(ctx.chat.id, ctx.message.message_id);
                await ctx.telegram.deleteMessage(ctx.chat.id, botMessage.message_id);

                // –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∫—É –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
                botMessageToVoice.delete(botMessage.message_id);

                // –ü–µ—Ä–µ–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
                await processVoice(ctx, voiceData.fileId, voiceData.voiceMessageId, false);

                return;
            } catch (error) {
                console.error('Error processing noformat command:', error);
                await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.');
                return;
            }
        }
    }

    // –û–±—ã—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    userPreferences.set(userId, false);
    ctx.reply(
        `${MODES.WITHOUT_FORMAT.emoji} *–†–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω: ${MODES.WITHOUT_FORMAT.name}*\n\n–í–∞—à–∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.`,
        {
            parse_mode: 'Markdown',
        }
    );
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞
bot.command('toggle', (ctx) => {
    const userId = ctx.from.id;
    const currentMode = userPreferences.get(userId) !== false;
    userPreferences.set(userId, !currentMode);

    const newMode = getUserMode(userId);
    ctx.reply(`${newMode.emoji} *–†–µ–∂–∏–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞: ${newMode.name}*\n\n${newMode.description}`, {
        parse_mode: 'Markdown',
    });
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
bot.command('mode', (ctx) => {
    const mode = getUserMode(ctx.from.id);
    ctx.reply(`${mode.emoji} *–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: ${mode.name}*\n\n${mode.description}`, {
        parse_mode: 'Markdown',
    });
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏
async function handleDelete(ctx) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–æ–π
    if (ctx.message.reply_to_message && ctx.message.reply_to_message.from?.is_bot) {
        const botMessage = ctx.message.reply_to_message;
        const voiceData = botMessageToVoice.get(botMessage.message_id);

        if (voiceData) {
            try {
                // –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await ctx.telegram.deleteMessage(ctx.chat.id, ctx.message.message_id);
                
                // –£–¥–∞–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–æ–π
                await ctx.telegram.deleteMessage(ctx.chat.id, botMessage.message_id);
                
                // –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await ctx.telegram.deleteMessage(ctx.chat.id, voiceData.voiceMessageId);

                // –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∫—É –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
                botMessageToVoice.delete(botMessage.message_id);

                return;
            } catch (error) {
                console.error('Error processing delete command:', error);
                // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
                // –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å —á–∞—Ç
                return;
            }
        }
    }

    // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–µ –∫–∞–∫ –æ—Ç–≤–µ—Ç –Ω–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É, —É–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–º—É –∫–æ–º–∞–Ω–¥—É
    try {
        await ctx.telegram.deleteMessage(ctx.chat.id, ctx.message.message_id);
    } catch (error) {
        console.error('Error deleting command message:', error);
    }
}

bot.command('d', handleDelete);
bot.command('del', handleDelete);

bot.on('voice', async (ctx) => {
    try {
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
        const user = ctx.message.from;
        const userId = user.id;
        const username = user.username ? `@${user.username}` : `${user.first_name} ${user.last_name || ''}`.trim();
        console.log(`üì© –ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username} (ID: ${userId})`);

        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const withFormatting = userPreferences.get(userId) !== false;
        const fileId = ctx.message.voice.file_id;

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const botReply = await processVoice(ctx, fileId, ctx.message.message_id, withFormatting);

        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
        const mode = getUserMode(userId);
        console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${username} –≤ —Ä–µ–∂–∏–º–µ ${mode.name}`);
    } catch (err) {
        console.error(err);
        await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.');
    }
});

// –î–æ–±–∞–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–∫—É
bot.command('help', (ctx) => {
    const mode = getUserMode(ctx.from.id);
    ctx.reply(
        `ü§ñ *–ë–æ—Ç –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π*\n\n` +
            `${mode.emoji} –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: *${mode.name}*\n\n` +
            `–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –±–æ—Ç —Ä–∞—Å—à–∏—Ñ—Ä—É–µ—Ç –µ–≥–æ.\n\n` +
            `üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n` +
            `${MODES.WITH_FORMAT.emoji} \`/format\` - –≤–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º (—É–ª—É—á—à–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫)\n` +
            `${MODES.WITHOUT_FORMAT.emoji} \`/noformat\` - –≤–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞)\n` +
            `üîÑ \`/toggle\` - –±—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏\n` +
            `‚ÑπÔ∏è \`/mode\` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã\n` +
            `üÜò \`/help\` - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n` +
            `üè† \`/start\` - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n\n` +
            `üí° *–†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã:*\n` +
            `${MODES.WITH_FORMAT.emoji} **–° —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º:** –∑–∞–≥–æ–ª–æ–≤–æ–∫ + —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç\n` +
            `${MODES.WITHOUT_FORMAT.emoji} **–ë–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:** —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞\n\n` +
            `üí¨ *–°–æ–≤–µ—Ç:* –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –∫–æ–º–∞–Ω–¥–æ–π /format –∏–ª–∏ /noformat, —á—Ç–æ–±—ã –ø–µ—Ä–µ–æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ç–æ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–º —Ä–µ–∂–∏–º–µ!\n\n` +
            `üìù –¢–µ–∫—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç—Å—è –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è`,
        { parse_mode: 'Markdown' }
    );
});

bot.launch();


// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–≤—Ç–æ–∫–æ–º–ø–ª–∏—Ç–∞
bot.telegram.setMyCommands([
    { command: 'start', description: '–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º' },
    { command: 'format', description: '–†–µ–∂–∏–º —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º üé®' },
    { command: 'noformat', description: '–†–µ–∂–∏–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è üìù' },
    { command: 'toggle', description: '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º' },
    { command: 'mode', description: '–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º' },
    { command: 'd', description: '–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è üóëÔ∏è' },
    { command: 'del', description: '–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è üóëÔ∏è' },
    { command: 'help', description: '–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º' },
]);

console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
